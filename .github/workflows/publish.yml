name: Publish

permissions:
  contents: write
  actions: write
  attestations: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish"
        type: string
        required: true

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      version_tag: v${{ inputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Log in to npm
        run: |
          echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > ./.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install dependencies, build, check and test
        run: pnpm install && pnpm run build && pnpm run check && pnpm run test

      - name: Set version
        run: |
          pnpm version ${{ inputs.version }} --allow-same-version --no-commit-hooks --no-git-tag-version --silent || true

      - name: Dry-run publish and publish
        run: |
          pnpm publish --dry-run --access public --no-git-checks --tag=latest
          pnpm publish --access public --no-git-checks --tag=latest

      - name: Publish Github Release
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ env.version_tag }}',
              sha: context.sha
            }).then(() => github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ env.version_tag }}',
              name: '${{ env.version_tag }}',
              draft: false,
              prerelease: false,
              generate_release_notes: true
            }))
